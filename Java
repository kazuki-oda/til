出力の仕方  
System.out.println("Hello World");  
変数の定義の仕方  
int number String name等  
int型同士の計算の仕方  
キャスト  
int number1 = 9;
int number2 = 2;
System.out.println((double)number1 / number2);  
出力は4.5となる。  
引数
class Main {  
  public static void main (String[] args) {  
    printData("an");  
    printData("brian");  
  }  
  public static void printData(String name){  
    System.out.println("私の名前は" + name + "です");  
  }  
}  
私の名前はanです  
私の名前はbrianですが出力される。  
同じ名前のメソッドは使えない。ただ引数の数や型等が違えば同じ名前のメソッドが使える。  
コンソールに入力された文字列を受け取り出力する  
import java.util.Scanner;  
class Main {  
  public static void main(String[] args) {  
    Scanner scanner = new Scanner(System.in);  
    String nane = scanner.next();  
    System.out.println(name);
  }  
}  
数値はscanner.nextInt();  
小数はscanner.nextDouble();  
でコンソールから値を受け取ることができる。  
インスタンスメソッドhelloを定義する  
public void hello() {  
クラスフィールドの具体例  
class Person {  
  public static int count;←クラスフィールド  
  public String firstName;  
  public String lastName;←インスタンスフィールド  
publicをprivateに替えるとクラス外からアクセスができなくなる。  
getNumber等にするとクラス外からアクセスすることが出来るようになる。  
